#!/bin/bash

#set -x

algorithm="sha512sum"
waitingTime="1s"

dateTime () {
    date +"%F_%H.%M.%S"
}

init () {
    if [[ -d .fc ]] ; then
        echo "Repository already exists - do nothing"
        exit 255
    else
        mkdir .fc
        numberOfFiles=$(find -L -type f | wc -l)
        find -L -type f -exec $algorithm {} \; > .fc/current.sum &
        calculatingPid=$!
        trap "kill -SIGINT $calculatingPid" SIGINT
         
        while [[ -d /proc/$calculatingPid ]] ; do
            listOfCalculatedFiles=$(cat .fc/current.sum | wc -l)
            echo -e -n "\033[1K\r"
            echo -n "Progress: $listOfCalculatedFiles / $numberOfFiles"
            sleep $waitingTime
        done
        trap - SIGINT
        listOfCalculatedFiles=$(cat .fc/current.sum | wc -l)
        echo -e -n "\033[1K\r"
        echo -n "Progress: $listOfCalculatedFiles / $numberOfFiles"
    fi
}

update () {
    if [[ -d .fc ]] ; then
        cp .fc/current.sum .fc/$(dateTime).sum

        numberOfFiles=$(find -L -type f | wc -l)
        find -L -type f -exec $algorithm {} \; > .fc/current.sum &
        calculatingPid=$!
        trap "kill -SIGINT $calculatingPid" SIGINT
        
        while [[ -d /proc/$calculatingPid ]] ; do
            listOfCalculatedFiles=$(cat .fc/current.sum | wc -l)
            echo -e -n "\033[1K\r"
            echo -n "Progress: $listOfCalculatedFiles / $numberOfFiles"
            sleep $waitingTime
        done
        trap - SIGINT
        listOfCalculatedFiles=$(cat .fc/current.sum | wc -l)
        echo -e -n "\033[1K\r"
        echo -n "Progress: $listOfCalculatedFiles / $numberOfFiles"
    else
        echo "Repository does not exist - create them with the command: fc init"
        exit 255
    fi
}

status () {

    #set -x
    
    current=".fc/current.sum"
    penultimate=$(ls -1 .fc/20*.sum | tail -1)

    rm .fc/*.srt > /dev/null 2>&1
    LC_ALL=C sort -k 2 $current -o .fc/current.srt
    LC_ALL=C sort -k 2 $penultimate -o .fc/penultimate.srt

    # modified
    echo
    echo "####################"
    echo "###              ###"
    echo "###   Modified   ###"
    echo "###              ###"
    echo "####################"
    echo
    while read line ; do
        currentSum=${line%% *}
        file=${line#* }
        file=${file#\*}
        penultimateLine=$(fgrep "$file" .fc/penultimate.srt)
        penultimateSum=${penultimateLine%% *}
        
        if [[ -n $penultimateSum && $currentSum != $penultimateSum ]] ; then
            echo "Modified file: $file"
            echo "    * current     - $currentSum"
            echo "    * penultimate - $penultimateSum"
        fi       
    done < .fc/current.srt

    # new
    echo
    echo "####################"
    echo "###              ###"
    echo "###     New      ###"
    echo "###              ###"
    echo "####################"
    echo
    while read line ; do
        currentSum=${line%% *}
        file=${line#* }
        file=${file#\*}
        penultimateLine=$(fgrep "$file" .fc/penultimate.srt)
        penultimateSum=${penultimateLine%% *}
        
        if [[ -z $penultimateSum ]] ; then
            echo "New file: $file"
            echo "    * current     - $currentSum"
            echo "    * penultimate - $penultimateSum"
        fi       
    done < .fc/current.srt

    # deleted
    echo
    echo "####################"
    echo "###              ###"
    echo "###   Deleted    ###"
    echo "###              ###"
    echo "####################"
    echo
    while read line ; do
        penultimateSum=${line%% *}
        file=${line#* }
        file=${file#\*}
        currentLine=$(fgrep "$file" .fc/current.srt)
        currentSum=${currentLine%% *}
        
        if [[ -z $currentSum ]] ; then
            echo "Deleted file: $file"
            echo "    * penultimate - $penultimateSum"
            echo "    * current     - $currentSum"
        fi       
    done < .fc/penultimate.srt

  

}

if [[ $1 == "init" ]] ; then
    init
elif [[ $1 == "update" ]] ; then
    update
elif [[ $1 == "status" ]] ; then
    status
else
    echo -e "!!! Alpha Version\n"
    echo "Program to detect changes in the files, for example in case of failure hard drive."
    echo "Use:"
    echo "   fc init - create repository; count checksums for all files"
    echo "   fc update - recalculates the checksum for all files"
    echo "   fc status - show changes between \"init/penultimate update\" and \"last update\"; list modified, added and deleted files"
fi

# How to run function in find command? Example below:
# export -f function_name
# find -type f -exec bash -c 'functio_name "$1"' _ {} \;
